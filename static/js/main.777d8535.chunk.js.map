{"version":3,"sources":["store/fieldsSlice.ts","assets/data/ships.ts","store/commonStateSlice.ts","store/dragStateSlice.ts","store/store.ts","store/hooks.ts","components/game/ships/Ship.tsx","scripts/cells/checkCell.ts","components/game/field/Cell.tsx","components/game/field/Field.tsx","components/commonUi/Button.tsx","components/game/field/Settings.tsx","components/game/invite/InviteSection.tsx","components/game/invite/InviteScreen.tsx","components/game/ships/ShipsField.tsx","components/game/GameArea.tsx","components/App.tsx","index.tsx"],"names":["ships","id","type","size","amount","gameStateSlice","createSlice","name","initialState","yourId","game","step","isHorizontal","isMyTurn","reducers","setYourId","state","action","payload","setGame","setIsHorizontal","removeShip","filter","el","addShip","push","setStep","resetShips","setIsMyTurn","actions","dragStateSlice","isSelected","setIsSelected","data","i","j","x","y","map","fieldsSlice","yourField","enemyField","setField","setCell","find","setEnemyCell","resetHoverField","resetField","rootReducer","combineReducers","commonStateSlice","store","configureStore","reducer","useAppDispatch","useDispatch","useAppSelector","useSelector","Ship","dispatch","selected","onClick","className","style","width","background","checkCell","field","checkAroundCell","checkShip","Cell","isEnemy","useState","isAvailable","setIsAvailable","toolkit","display","hover","rotateShip","e","a","preventDefault","onMouseMove","onMouseLeave","socket","emit","onContextMenu","Field","your","useEffect","on","victim","cell","transform","length","Button","props","children","disabled","GameSettings","isPending","setIsPending","InviteSection","text","isCopied","setIsCopied","inviteLink","setInviteLink","res","response","console","log","alert","copyLink","navigator","clipboard","writeText","window","location","hostname","pathname","setTimeout","defaultValue","onChange","target","value","includes","newLink","substring","indexOf","InviteScreen","ShipsField","ref","useRef","isOut","setIsOut","slide","useCallback","current","left","offsetWidth","GameArea","reload","io","App","search","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.777d8535.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { CellType } from '../types';\r\n\r\nconst data: CellType[] = [];\r\nfor (let i = 0; i < 10; i++) {\r\n  for (let j = 0; j < 10; j++) {\r\n    data.push({ id: i + j, x: i, y: j, state: 'empty' });\r\n  }\r\n}\r\ndata.map((el, id) => (el.id = id));\r\n\r\nconst fieldsSlice = createSlice({\r\n  name: 'yourField',\r\n  initialState: {\r\n    yourField: data,\r\n    enemyField: data,\r\n  },\r\n  reducers: {\r\n    setField: (state, action) => {\r\n      state.yourField = action.payload;\r\n    },\r\n    setCell: (state, action) => {\r\n      const id = state.yourField.find(\r\n        (el) => el.x === action.payload.x && el.y === action.payload.y\r\n      );\r\n      if (id) {\r\n        state.yourField[id.id].state = action.payload.state;\r\n      }\r\n    },\r\n    setEnemyCell: (state, action) => {\r\n      const id = state.enemyField.find(\r\n        (el) => el.x === action.payload.x && el.y === action.payload.y\r\n      );\r\n      if (id) {\r\n        state.enemyField[id.id].state = action.payload.state;\r\n      }\r\n    },\r\n    resetHoverField: (state) => {\r\n      state.yourField.map((el) => (el.state === 'hover' ? (el.state = 'empty') : el.state));\r\n    },\r\n    resetField: (state) => {\r\n      state.yourField = data;\r\n    },\r\n  },\r\n});\r\n\r\nexport default fieldsSlice.reducer;\r\nexport const { setField, setCell, resetHoverField, resetField, setEnemyCell } = fieldsSlice.actions;\r\n","import { ShipType } from '../../types';\r\n\r\nexport const ships: ShipType[] = [\r\n  {\r\n    id: 0,\r\n    type: 'boat',\r\n    size: 1,\r\n    amount: 4,\r\n  },\r\n  {\r\n    id: 1,\r\n    type: 'boat',\r\n    size: 1,\r\n    amount: 4,\r\n  },\r\n  {\r\n    id: 2,\r\n    type: 'boat',\r\n    size: 1,\r\n    amount: 4,\r\n  },\r\n  {\r\n    id: 3,\r\n    type: 'boat',\r\n    size: 1,\r\n    amount: 4,\r\n  },\r\n  {\r\n    id: 4,\r\n    type: 'cruiser',\r\n    size: 2,\r\n    amount: 3,\r\n  },\r\n  {\r\n    id: 5,\r\n    type: 'cruiser',\r\n    size: 2,\r\n    amount: 3,\r\n  },\r\n  {\r\n    id: 6,\r\n    type: 'cruiser',\r\n    size: 2,\r\n    amount: 3,\r\n  },\r\n  {\r\n    id: 7,\r\n    type: 'destroyer',\r\n    size: 3,\r\n    amount: 2,\r\n  },\r\n  {\r\n    id: 8,\r\n    type: 'destroyer',\r\n    size: 3,\r\n    amount: 2,\r\n  },\r\n  {\r\n    id: 9,\r\n    type: 'carrier',\r\n    size: 4,\r\n    amount: 1,\r\n  },\r\n];","import { createSlice } from '@reduxjs/toolkit';\r\nimport { ships } from '../assets/data/ships';\r\n\r\nconst gameStateSlice = createSlice({\r\n  name: 'gameState',\r\n  initialState: {\r\n    yourId: '',\r\n    game: '',\r\n    step: 'mainTitle',\r\n    isHorizontal: true,\r\n    ships: ships,\r\n    isMyTurn: false,\r\n  },\r\n  reducers: {\r\n    setYourId: (state, action) => {\r\n      state.yourId = action.payload;\r\n    },\r\n    setGame: (state, action) => {\r\n      state.game = action.payload;\r\n    },\r\n    setIsHorizontal: (state) => {\r\n      state.isHorizontal = !state.isHorizontal;\r\n    },\r\n    removeShip: (state, action) => {\r\n      state.ships = state.ships.filter((el) => el.id !== action.payload);\r\n    },\r\n    addShip: (state, action) => {\r\n      state.ships.push(action.payload);\r\n    },\r\n    setStep: (state, action) => {\r\n      state.step = action.payload;\r\n    },\r\n    resetShips: (state) => {\r\n      state.ships = ships;\r\n    },\r\n    setIsMyTurn: (state, action) => {\r\n      state.isMyTurn = action.payload\r\n    }\r\n  },\r\n});\r\n\r\nexport default gameStateSlice.reducer;\r\nexport const { setIsHorizontal, removeShip, addShip, setStep, resetShips, setGame, setYourId, setIsMyTurn } =\r\n  gameStateSlice.actions;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { ShipType } from '../types';\r\n\r\nconst initialState: { isSelected: ShipType | null} = {\r\n  isSelected: null,\r\n};\r\n\r\nconst dragStateSlice = createSlice({\r\n  name: 'drag',\r\n  initialState: {\r\n    ...initialState,\r\n  },\r\n  reducers: {\r\n    setIsSelected: (state, action) => {\r\n      state.isSelected = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default dragStateSlice.reducer;\r\nexport const { setIsSelected } = dragStateSlice.actions;\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport commonStateSlice from './commonStateSlice';\r\nimport dragStateSlice from './dragStateSlice';\r\nimport fieldsSlice from './fieldsSlice';\r\n\r\nconst rootReducer = combineReducers({\r\n  dragStateSlice: dragStateSlice,\r\n  fieldsSlice: fieldsSlice,\r\n  gameStateSlice: commonStateSlice,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { setIsSelected } from '../../../store/dragStateSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\nimport { ShipType } from '../../../types';\r\n\r\nconst Ship = ({ id, type, size }: ShipType) => {\r\n  const dispatch = useAppDispatch();\r\n  const { selected } = useAppSelector(\r\n    ({ dragStateSlice: toolkit }) => {\r\n      return {\r\n        selected: toolkit.isSelected,\r\n      };\r\n    }\r\n  );\r\n\r\n  const select = () => {\r\n    if (selected && selected.id === id) dispatch(setIsSelected(null));\r\n    else dispatch(setIsSelected({ id: id, type: type, size: size }));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={select}\r\n      className='ship'\r\n      style={{\r\n        width: `calc(${size} * 5vh)`,\r\n        background: selected && selected.id === id ? '#00f' : '#00ff00',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Ship;\r\n","import { CellType } from \"../../types\";\r\n\r\nconst checkCell = (x: number, y: number, field: CellType[]) => {\r\n  const id = field.find((el) => el.x === x && el.y === y);\r\n  if (id?.state !== 'ship') {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst checkAroundCell = (x: number, y: number, field: CellType[]) => {\r\n  if (checkCell(x, y, field) &&\r\n    checkCell(x + 1, y, field) &&\r\n    checkCell(x - 1, y, field) &&\r\n    checkCell(x, y + 1, field) &&\r\n    checkCell(x, y - 1, field) &&\r\n    checkCell(x + 1, y + 1, field) &&\r\n    checkCell(x + 1, y - 1, field) &&\r\n    checkCell(x - 1, y + 1, field) &&\r\n    checkCell(x - 1, y - 1, field)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport const checkShip = (x: number, y: number, field: CellType[], isHorizontal: boolean, size: number) => {\r\n  if (!isHorizontal) {\r\n    for (let i = 0; i < size; i++) {\r\n      if (!checkAroundCell(x + i, y, field)) {\r\n        return false;\r\n      }\r\n    }\r\n  } else {\r\n    for (let i = 0; i < size; i++) {\r\n      if (!checkAroundCell(x, y + i, field)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}","import { useState } from 'react';\r\nimport { checkShip } from '../../../scripts/cells/checkCell';\r\nimport { removeShip, setIsHorizontal } from '../../../store/commonStateSlice';\r\nimport { setIsSelected } from '../../../store/dragStateSlice';\r\nimport { resetHoverField, setCell } from '../../../store/fieldsSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\nimport { CellType } from '../../../types';\r\nimport { socket } from '../../App';\r\nimport './style.css';\r\n\r\nconst Cell = ({ id, x, y, state, isEnemy }: CellType & { isEnemy?: boolean }) => {\r\n  const [isAvailable, setIsAvailable] = useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { isSelected } = useAppSelector(({ dragStateSlice: toolkit }) => {\r\n    return {\r\n      isSelected: toolkit.isSelected,\r\n    };\r\n  });\r\n\r\n  const { yourField } = useAppSelector(({ fieldsSlice: toolkit }) => {\r\n    return {\r\n      yourField: toolkit.yourField,\r\n    };\r\n  });\r\n\r\n  const { isHorizontal, step, game, isMyTurn } = useAppSelector(({ gameStateSlice: toolkit }) => {\r\n    return {\r\n      isHorizontal: toolkit.isHorizontal,\r\n      step: toolkit.step,\r\n      game: toolkit.game,\r\n      isMyTurn: toolkit.isMyTurn,\r\n    };\r\n  });\r\n\r\n  const display = (hover: string) => {\r\n    if (isSelected) {\r\n      if (\r\n        (isHorizontal && y + isSelected.size <= 10) ||\r\n        (!isHorizontal && x + isSelected.size <= 10)\r\n      ) {\r\n        for (let i = 0; i < isSelected.size; i++) {\r\n          if (checkShip(x, y, yourField, isHorizontal, isSelected.size)) {\r\n            setIsAvailable(true);\r\n            dispatch(\r\n              setCell(\r\n                isHorizontal\r\n                  ? {\r\n                      x: x,\r\n                      y: y + i,\r\n                      state: hover,\r\n                    }\r\n                  : {\r\n                      x: x + i,\r\n                      y: y,\r\n                      state: hover,\r\n                    }\r\n              )\r\n            );\r\n          }\r\n        }\r\n      } else setIsAvailable(false);\r\n    }\r\n  };\r\n\r\n  const placeShip = () => {\r\n    if (isAvailable && isSelected) {\r\n      display('ship');\r\n      dispatch(removeShip(isSelected.id));\r\n      dispatch(setIsSelected(null));\r\n      setIsAvailable(false);\r\n    }\r\n  };\r\n\r\n  const rotateShip = async (e: React.MouseEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    await dispatch(setIsHorizontal());\r\n    await dispatch(resetHoverField());\r\n  };\r\n\r\n  const checkEnemyCell = () => {\r\n    if (isMyTurn) {\r\n      socket.emit('check-cell', id, game);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`cell ${isEnemy ? 'cell_enemy' : ''}`}\r\n      style={{\r\n        background:\r\n          state === 'hover'\r\n            ? '#00f'\r\n            : state === 'miss'\r\n            ? '#fff'\r\n            : state === 'hit'\r\n            ? '#f00'\r\n            : state === 'ship'\r\n            ? '#0f0'\r\n            : '#555',\r\n      }}\r\n      onMouseMove={() => display('hover')}\r\n      onMouseLeave={() => display('empty')}\r\n      onClick={() => (step === 'placeShips' ? placeShip() : checkEnemyCell())}\r\n      onContextMenu={(e) => rotateShip(e)}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\nimport { useEffect } from 'react';\r\nimport Ship from '../ships/Ship';\r\nimport Cell from './Cell';\r\nimport './style.css';\r\nimport { socket } from '../../App';\r\nimport { setCell, setEnemyCell } from '../../../store/fieldsSlice';\r\nimport { setIsMyTurn } from '../../../store/commonStateSlice';\r\n\r\nconst Field = ({ your }: { your?: boolean }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { field, enemyField } = useAppSelector(({ fieldsSlice: toolkit }) => {\r\n    return {\r\n      field: toolkit.yourField,\r\n      enemyField: toolkit.enemyField,\r\n    };\r\n  });\r\n\r\n  const { isHorizontal, ships, step, isMyTurn, yourId } = useAppSelector(\r\n    ({ gameStateSlice: toolkit }) => {\r\n      return {\r\n        isHorizontal: toolkit.isHorizontal,\r\n        ships: toolkit.ships,\r\n        step: toolkit.step,\r\n        isMyTurn: toolkit.isMyTurn,\r\n        yourId: toolkit.yourId,\r\n      };\r\n    }\r\n  );\r\n\r\n  const { isSelected } = useAppSelector(({ dragStateSlice: toolkit }) => {\r\n    return {\r\n      isSelected: toolkit.isSelected,\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    socket.on('check-cell-response', ({ victim, cell }) => {\r\n      if (cell.state === 'empty') {\r\n        cell.state = 'miss';\r\n      } else if (cell.state === 'ship' || cell.state === 'hit') {\r\n        cell.state = 'hit';\r\n      }\r\n      if (yourId && victim && victim === yourId) {\r\n        dispatch(setCell(cell));\r\n        if (cell.state !== 'hit') {\r\n          dispatch(setIsMyTurn(true));\r\n        } else dispatch(setIsMyTurn(false));\r\n      } else if (yourId && victim && victim !== yourId) {\r\n        dispatch(setEnemyCell(cell));\r\n        if (cell.state === 'hit') {\r\n          dispatch(setIsMyTurn(true));\r\n        } else dispatch(setIsMyTurn(false));\r\n      }\r\n    });\r\n  }, [dispatch, yourId, field, enemyField]);\r\n\r\n  return (\r\n    <div>\r\n      <div className='field__title'>\r\n        {your ? (\r\n          <>\r\n            <div>Your field</div>\r\n            {step === 'placeShips' ? (\r\n              <div\r\n                style={{\r\n                  transform: `scale(${200 / (isSelected?.size || 20)}%)${\r\n                    !isHorizontal ? ' rotate(90deg)' : ' '\r\n                  }`,\r\n                }}\r\n              >\r\n                {ships.length !== 0 && (\r\n                  <Ship\r\n                    id={isSelected?.id || 0}\r\n                    type={isSelected?.type || 'boat'}\r\n                    size={isSelected?.size || 0}\r\n                  />\r\n                )}\r\n              </div>\r\n            ) : (\r\n              step === 'gameStart' && <div>{isMyTurn ? 'Your' : 'Enemy'} turn</div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          'Enemy field'\r\n        )}\r\n      </div>\r\n      <div className='container game__field'>\r\n        {your\r\n          ? field.map((el) => <Cell key={el.id} id={el.id} x={el.x} y={el.y} state={el.state} />)\r\n          : enemyField.map((el) => (\r\n              <Cell key={el.id} id={el.id} x={el.x} y={el.y} state={el.state} isEnemy />\r\n            ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Field;\r\n","import React, { ReactChild } from 'react';\r\nimport './style.css';\r\n\r\ninterface PropsType {\r\n  onClick?: (e?: React.MouseEvent<HTMLButtonElement>) => void;\r\n  children?: ReactChild | ReactChild[];\r\n  disabled?: boolean;\r\n}\r\n\r\nconst Button = (props: PropsType) => {\r\n  const { onClick, children, disabled } = props;\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      className='button'\r\n      onClick={() => onClick && onClick()}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { setIsMyTurn, resetShips, setStep } from '../../../store/commonStateSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\nimport { useEffect, useState } from 'react';\r\nimport Button from '../../commonUi/Button';\r\nimport './style.css';\r\nimport { resetField } from '../../../store/fieldsSlice';\r\nimport { socket } from '../../App';\r\n\r\nconst GameSettings = () => {\r\n  const [isPending, setIsPending] = useState(false);\r\n\r\n  const { ships, game, yourId } = useAppSelector(({ gameStateSlice: toolkit }) => {\r\n    return {\r\n      ships: toolkit.ships,\r\n      game: toolkit.game,\r\n      yourId: toolkit.yourId\r\n    };\r\n  });\r\n\r\n  const { yourField } = useAppSelector(({ fieldsSlice: toolkit }) => {\r\n    return {\r\n      yourField: toolkit.yourField,\r\n    };\r\n  });\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    socket.on('game-start', () => {\r\n      dispatch(setStep('gameStart'));\r\n      if (game === yourId) {\r\n        dispatch(setIsMyTurn(true))\r\n      }\r\n    });\r\n\r\n    socket.on('game-pending', () => {\r\n      if (ships.length === 0) setIsPending(true);\r\n    });\r\n  }, [dispatch, ships, yourId, game]);\r\n\r\n  const confirmReady = () => {\r\n    socket.emit('player-ready', game, yourField);\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetShips());\r\n    dispatch(resetField());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='field__title'>Game Info</div>\r\n      <div className='container settings__field'>\r\n        <h4>Game controls</h4>\r\n        <label>'Left mouse click to place ship'</label>\r\n        <label>'Right mouse click to rotate ship'</label>\r\n        {isPending ? (\r\n          <Button disabled>Waiting for your opponent...</Button>\r\n        ) : (\r\n          <>\r\n            <Button onClick={confirmReady} disabled={ships.length !== 0}>\r\n              Proceed to game\r\n            </Button>\r\n            <Button onClick={reset}>Reset</Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameSettings;\r\n","import { socket } from '../../App';\r\nimport Button from '../../commonUi/Button';\r\nimport { useEffect, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\nimport { setGame, setStep, setYourId } from '../../../store/commonStateSlice';\r\n\r\nconst InviteSection = ({ text }: { text?: boolean }) => {\r\n  const [isCopied, setIsCopied] = useState(false);\r\n  const [inviteLink, setInviteLink] = useState('');\r\n\r\n  const { yourId } = useAppSelector(({ gameStateSlice: toolkit }) => {\r\n    return {\r\n      yourId: toolkit.yourId,\r\n    };\r\n  });\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    socket.on('connect', () => {\r\n      socket.emit('get-id');\r\n    });\r\n    socket.on('git-id-res', (id) => {\r\n      dispatch(setYourId(id));\r\n    });\r\n    socket.on('room-create-response', (res) => {\r\n      if (res.response === 'accept') {\r\n        console.log('accepted');\r\n        dispatch(setGame(res.game));\r\n        dispatch(setStep('placeShips'));\r\n      } else {\r\n        alert(`Error ${res.response}!`);\r\n      }\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const copyLink = async () => {\r\n    await navigator.clipboard.writeText(\r\n      `${window.location.hostname}${window.location.pathname}?invite=` + yourId\r\n    );\r\n    setIsCopied(true);\r\n    setTimeout(() => {\r\n      setIsCopied(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const confirm = () => {\r\n    if (!text) {\r\n      if (inviteLink.includes(window.location.hostname)) {\r\n        const newLink = inviteLink.substring(inviteLink.indexOf('?invite=') + 8);\r\n        socket.emit('room-create', newLink);\r\n      } else {\r\n        alert(`Wrong invite code!`);\r\n        setInviteLink('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInviteLink(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='invite__section'>\r\n      {text ? (\r\n        <>\r\n          <h4>Welcome to Warships!</h4>\r\n          <label className='invite__label'>I'll think of this text later</label>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <label className='invite__label'>Invite your friend!</label>\r\n            <div className='invite__input_label'>\r\n              {isCopied ? (\r\n                <label className='invite__input'>Copied!</label>\r\n              ) : (\r\n                <>\r\n                  <input type='text' className='invite__input' defaultValue={yourId} disabled />\r\n                  <Button onClick={copyLink}>Copy</Button>{' '}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label className='invite__label'>Or insert invite link here</label>\r\n            <div className='invite__input_label'>\r\n              <input type='text' className='invite__input' onChange={handleChange} />\r\n              <Button onClick={confirm}>Confirm</Button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InviteSection;\r\n","import InviteSection from './InviteSection';\r\nimport './style.css'\r\n\r\nconst InviteScreen = () => {\r\n  return (\r\n    <div className='invite__screen'>\r\n      <InviteSection text />\r\n      <InviteSection />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InviteScreen;","import { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useAppSelector } from '../../../store/hooks';\r\nimport Ship from './Ship';\r\nimport './style.css';\r\n\r\nconst ShipsField = () => {\r\n  const { ships } = useAppSelector(({ gameStateSlice: toolkit }) => {\r\n    return {\r\n      ships: toolkit.ships,\r\n    };\r\n  });\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const [isOut, setIsOut] = useState(false);\r\n\r\n  const slide = useCallback(() => {\r\n    if (ref.current && ships.length !== 0)\r\n      if (isOut) {\r\n        ref.current.style.left = `-${ref.current?.offsetWidth || 0}px`;\r\n        setIsOut(false);\r\n      } else {\r\n        ref.current.style.left = `0`;\r\n        setIsOut(true);\r\n      }\r\n  }, [isOut, ships.length]);\r\n\r\n  useEffect(() => {\r\n    if (ref.current) ref.current.style.left = `-${ref.current?.offsetWidth || 0}px`;\r\n  }, [ref]);\r\n\r\n  useEffect(() => {\r\n    if (ships.length === 0 && ref.current) {\r\n      ref.current.style.left = `-${ref.current?.offsetWidth || 0}px`;\r\n      setIsOut(true);\r\n    }\r\n  }, [ships, slide]);\r\n\r\n  return (\r\n    <div className='ships__container' ref={ref}>\r\n      {ships.map((el) => (\r\n        <Ship key={el.id} id={el.id} type={el.type} size={el.size} />\r\n      ))}\r\n      <div className='trigger' onClick={slide}>\r\n        Place ships\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShipsField;\r\n","import { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { socket } from '../App';\r\nimport { useEffect } from 'react';\r\nimport Field from './field/Field';\r\nimport GameSettings from './field/Settings';\r\nimport InviteScreen from './invite/InviteScreen';\r\nimport ShipsField from './ships/ShipsField';\r\nimport './style.css';\r\nimport { setStep } from '../../store/commonStateSlice';\r\n\r\nconst GameArea = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { step, yourId } = useAppSelector(({ gameStateSlice: toolkit }) => {\r\n    return {\r\n      step: toolkit.step,\r\n      yourId: toolkit.yourId,\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    socket.on('roommate-disconnected', () => {\r\n      alert('Roommate disconnected!');\r\n      dispatch(setStep('mainTitle'));\r\n      window.location.reload();\r\n    });\r\n  }, [dispatch, yourId]);\r\n\r\n  return (\r\n    <div className='game__area'>\r\n      {step === 'mainTitle' && <InviteScreen />}\r\n      {step === 'placeShips' && (\r\n        <>\r\n          <ShipsField />\r\n          <Field your />\r\n          <GameSettings />\r\n        </>\r\n      )}\r\n      {step === 'gameStart' && (\r\n        <>\r\n          <Field your />\r\n          <Field />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameArea;\r\n","import { Provider } from 'react-redux';\r\nimport { store } from '../store/store';\r\nimport { useEffect } from 'react';\r\nimport './style.css';\r\nimport { io } from 'socket.io-client';\r\nimport GameArea from './game/GameArea';\r\n\r\n// export const socket = io('http://localhost:3001');\r\nexport const socket = io('https://warships-api.herokuapp.com/');\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    if (window.location.search.length) {\r\n      const inviteLink = window.location.search;\r\n      const newLink = inviteLink.substring(inviteLink.indexOf('?invite=') + 8);\r\n      console.log(inviteLink, newLink);\r\n      socket.emit('room-create', newLink);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <div className='root'>\r\n        <header>\r\n          <h1>Warships!</h1>\r\n        </header>\r\n        <main>\r\n          <GameArea />\r\n        </main>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './components/App';\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}